<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Princeling66&#39;Blog</title>
  
  <subtitle>这不是BUG 这是feature</subtitle>
  <link href="https://princeling66.github.io/MyBlog/atom.xml" rel="self"/>
  
  <link href="https://princeling66.github.io/MyBlog/"/>
  <updated>2021-01-05T07:29:45.497Z</updated>
  <id>https://princeling66.github.io/MyBlog/</id>
  
  <author>
    <name>wangPei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring Security 和 OAuth2的简单介绍</title>
    <link href="https://princeling66.github.io/MyBlog/2021/01/05/Spring%20Security%20%E5%92%8C%20OAuth2%E7%9A%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
    <id>https://princeling66.github.io/MyBlog/2021/01/05/Spring%20Security%20%E5%92%8C%20OAuth2%E7%9A%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</id>
    <published>2021-01-05T10:00:16.000Z</published>
    <updated>2021-01-05T07:29:45.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Security-和-OAuth2的简单介绍"><a href="#Spring-Security-和-OAuth2的简单介绍" class="headerlink" title="Spring Security 和 OAuth2的简单介绍"></a>Spring Security 和 OAuth2的简单介绍</h1><h2 id="Spring-Security"><a href="#Spring-Security" class="headerlink" title="Spring Security"></a>Spring Security</h2><p>Spring Security，这是一种基于 Spring AOP 和 Servlet 过滤器的安全框架。它提供全面的安全性解决方案，同时在 Web 请求级和方法调用级处理身份确认和授权。</p><p>它是一个专注于为Java应用程序提供认证和授权的框架。像所有的Spring项目一样，Spring Security的真正威力在于它可以很容易地扩展以满足客户的需求。</p><p>做web应用时，一般都需要用到安全框架，而现在web应用中，主要有两套安全框架，就是shiro 和 spring security。</p><p>功能上两者都差不多，shiro有的功能spring security都有，而且spring security还有一些额外的功能，就是对OAuth的支持。<img src= "/MyBlog/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210105114715321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY5OTM0OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>上图是网上的一些对比，如果是做单体项目，shiro足以，如果是分布式项目，推荐spring security 和 oauth2.0。</p><h2 id="OAuth2"><a href="#OAuth2" class="headerlink" title="OAuth2"></a>OAuth2</h2><p>OAuth 2.0是业界标准的授权协议。OAuth 2.0注重客户端开发者的简单性，同时为Web应用、桌面应用、手机和客厅设备提供特定的授权流程</p><p>比如微信有些小程序使用的时候需要微信的账号信息，如头像昵称等，这时候就是通过OAuth授权协议将微信的头像昵称信息共享给小程序，而不需要用到微信的账号和密码。<br>还有现在很多网站支持第三方登陆，如支持qq,微博，github等等，这种登陆方式也是基于OAuth2的，不必担心会造成密码泄漏。</p><p><a href="https://www.bilibili.com/video/av35979732?from=search&seid=6370600346221545740">彻底理解 OAuth2 协议</a><br>这个视频深入浅出，浅显易懂的讲述了OAuth2的基本概念，授权模式，应用场景，看完之后对OAuth 2会有一个简单的了解。</p><p><img src= "/MyBlog/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210105145216316.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY5OTM0OA==,size_16,color_FFFFFF,t_70#pic_center"><br>这张图片是网上找来的，个人认为对OAuth2的流程画的很直观，网上其他关于OAuth2的详细解说有很多，感兴趣的可以去看看，这边就简单介绍一下。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Spring-Security-和-OAuth2的简单介绍&quot;&gt;&lt;a href=&quot;#Spring-Security-和-OAuth2的简单介绍&quot; class=&quot;headerlink&quot; title=&quot;Spring Security 和 OAuth2的简单介绍&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="授权" scheme="https://princeling66.github.io/MyBlog/categories/%E6%8E%88%E6%9D%83/"/>
    
    
    <category term="Spring Security" scheme="https://princeling66.github.io/MyBlog/tags/Spring-Security/"/>
    
    <category term="OAuth2" scheme="https://princeling66.github.io/MyBlog/tags/OAuth2/"/>
    
  </entry>
  
  <entry>
    <title>SQL 编写规范</title>
    <link href="https://princeling66.github.io/MyBlog/2020/12/29/SQL%20%E7%BC%96%E5%86%99%E8%A7%84%E8%8C%83/"/>
    <id>https://princeling66.github.io/MyBlog/2020/12/29/SQL%20%E7%BC%96%E5%86%99%E8%A7%84%E8%8C%83/</id>
    <published>2020-12-29T10:00:16.000Z</published>
    <updated>2020-12-29T09:13:33.779Z</updated>
    
    <content type="html"><![CDATA[<h4 id="SQL-编写规范"><a href="#SQL-编写规范" class="headerlink" title="SQL 编写规范"></a>SQL 编写规范</h4><h6 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h6><ol><li><p>UPDATE、DELETE 操作不使用 LIMIT，必须走 WHERE 精准匹配，LIMIT 是随机的，此类操作会导致数据出错。</p></li><li><p>禁止使用INSERT INTO t_xxx VALUES(xxx)，必须显式指定插入的列属性，避免表结构变动导致数据出错。</p></li><li><p>SQL 语句中最常见的导致索引失效的情况需注意：隐式类型转换，如索引 a 的类型是 varchar，SQL 语句写成 where a = 1; varchar 变成了int。</p></li><li><p>对索引列进行数学计算和函数等操作，例如，使用函数对日期列进行格式化处理。<br>join 列字符集不统一。</p></li><li><p>多列排序顺序不一致问题，如索引是 (a,b)，SQL 语句是 order by a b desclike。<br>模糊查询使用的时候对于字符型xxx%形式可以走到一些索引，其他情况都走不到索引。</p></li><li><p>使用了负方向查询（not，!=，not in 等）。==</p></li></ol><h6 id="建议事项"><a href="#建议事项" class="headerlink" title="建议事项"></a>建议事项</h6><ol><li>按需索取，拒绝select *，规避以下问题：无法索引覆盖，回表操作，增加 I/O。<br>额外的内存负担，大量冷数据灌入innodb_buffer_pool_size，降低查询命中率。<br>额外的网络传输开销。</li><li>尽量避免使用大事务，建议大事务拆小事务，规避主从延迟。<br>业务代码中事务及时提交，避免产生没必要的锁等待。</li><li>少用多表 join，大表禁止 join，两张表 join 必须让小表做驱动表，join 列必须字符集一致并且都建有索引。</li><li>LIMIT 分页优化，LIMIT 80000，10这种操作是取出80010条记录，再返回后10条，数据库压力很大，推荐先确认首记录的位置再分页，例如SELECT * FROM test WHERE id = ( SELECT sql_no_cache id FROM test order by id LIMIT 80000,1 ) LIMIT 10 ;。</li><li>避免多层子查询嵌套的 SQL 语句，MySQL 5.5 之前的查询优化器会把 in 改成 exists，会导致索引失效，若外表很大则性能会很差。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;SQL-编写规范&quot;&gt;&lt;a href=&quot;#SQL-编写规范&quot; class=&quot;headerlink&quot; title=&quot;SQL 编写规范&quot;&gt;&lt;/a&gt;SQL 编写规范&lt;/h4&gt;&lt;h6 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="数据库" scheme="https://princeling66.github.io/MyBlog/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="Mysql" scheme="https://princeling66.github.io/MyBlog/tags/Mysql/"/>
    
    <category term="SQL" scheme="https://princeling66.github.io/MyBlog/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>JReble破解</title>
    <link href="https://princeling66.github.io/MyBlog/2020/12/16/JReble%E7%A0%B4%E8%A7%A3/"/>
    <id>https://princeling66.github.io/MyBlog/2020/12/16/JReble%E7%A0%B4%E8%A7%A3/</id>
    <published>2020-12-16T10:00:16.000Z</published>
    <updated>2020-12-17T06:52:16.561Z</updated>
    
    <content type="html"><![CDATA[<h4 id="生成-GUID-的网址"><a href="#生成-GUID-的网址" class="headerlink" title="生成 GUID 的网址"></a>生成 GUID 的网址</h4><p><a href="https://www.guidgen.com/">https://www.guidgen.com/</a></p><h4 id="用这个网址-生成的-GUID-激活"><a href="#用这个网址-生成的-GUID-激活" class="headerlink" title="用这个网址 + 生成的 GUID 激活"></a>用这个网址 + 生成的 GUID 激活</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;jrebel.qekang.com&#x2F;</span><br></pre></td></tr></table></figure><h4 id="如"><a href="#如" class="headerlink" title="如:"></a>如:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;jrebel.qekang.com&#x2F;2df0fa47-95ba-4dec-911b-4209a64b32d4</span><br></pre></td></tr></table></figure><h4 id="粘贴到Team-URL-第一个框中"><a href="#粘贴到Team-URL-第一个框中" class="headerlink" title="粘贴到Team URL 第一个框中"></a>粘贴到Team URL 第一个框中</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IntelliJ IDEA --&gt;Preferences --&gt;JReble --&gt; Change License</span><br></pre></td></tr></table></figure><h4 id="设置离线模式-来防止失效"><a href="#设置离线模式-来防止失效" class="headerlink" title="设置离线模式 来防止失效"></a>设置离线模式 来防止失效</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IntelliJ IDEA --&gt;Preferences --&gt;JReble --&gt; Work offline</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;生成-GUID-的网址&quot;&gt;&lt;a href=&quot;#生成-GUID-的网址&quot; class=&quot;headerlink&quot; title=&quot;生成 GUID 的网址&quot;&gt;&lt;/a&gt;生成 GUID 的网址&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://www.guidgen.com/&quot;</summary>
      
    
    
    
    <category term="工具" scheme="https://princeling66.github.io/MyBlog/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="JReble" scheme="https://princeling66.github.io/MyBlog/tags/JReble/"/>
    
    <category term="破解" scheme="https://princeling66.github.io/MyBlog/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
</feed>
